version: 2

before:
  hooks:
    # Generate ANTLR files before building
    - task generate

builds:
  - id: qasmparser
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - 386
      - amd64
      - arm
      - arm64
    goarm:
      - 6
      - 7
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    main: ./cmd/qasmparser
    binary: qasmparser
    ldflags:
      - -s -w -X main.Version={{.Version}} -X main.Commit={{.Commit}} -X main.BuildDate={{.Date}}

archives:
  - id: qasmparser
    format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
    files:
      - README.md
      - LICENSE*
      - CHANGELOG.md

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^build:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge branch
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: 'Performance improvements'
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 2
    - title: Others
      order: 999

# Homebrew tap
brews:
  - name: qasmparser
    description: "OpenQASM 3.0 parser and analyzer"
    homepage: "https://github.com/orangekame3/qasmparser"
    license: "MIT"
    
    repository:
      owner: orangekame3
      name: homebrew-tap
      branch: main
      
    # Directory inside the repository to put the formula
    directory: Formula
    
    # Template for the url which is determined by the given Token (github,
    # gitlab or gitea)
    url_template: "https://github.com/orangekame3/qasmparser/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    
    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # download_strategy: CurlDownloadStrategy
    
    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    
    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    
    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula
    
    # Your app's homepage.
    # Default is empty.
    homepage: "https://github.com/orangekame3/qasmparser"
    
    # Template of your app's description.
    # Default is empty.
    description: "OpenQASM 3.0 parser and analyzer - Parse, validate, and analyze quantum circuits"
    
    # SPDX identifier of your app's license.
    # Default is empty.
    license: "MIT"
    
    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: false
    
    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    custom_block: |
      head "https://github.com/orangekame3/qasmparser.git"
    
    # Packages your package depends on.
    dependencies:
      - name: antlr
        type: optional
    
    # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash
    
    # Specify for packages that run as a service.
    # Default is empty.
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   ...
    
    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: |
      bin.install "qasmparser"
    
    # Custom test script for brew.
    # Default is empty.
    test: |
      system "#{bin}/qasmparser", "--version"

# Docker images
dockers:
  - image_templates:
      - "ghcr.io/orangekame3/qasmparser:{{ .Version }}-amd64"
      - "ghcr.io/orangekame3/qasmparser:latest-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/orangekame3/qasmparser"
      - "--platform=linux/amd64"
  - image_templates:
      - "ghcr.io/orangekame3/qasmparser:{{ .Version }}-arm64v8"
      - "ghcr.io/orangekame3/qasmparser:latest-arm64v8"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/orangekame3/qasmparser"
      - "--platform=linux/arm64/v8"
    goarch: arm64

docker_manifests:
  - name_template: "ghcr.io/orangekame3/qasmparser:{{ .Version }}"
    image_templates:
      - "ghcr.io/orangekame3/qasmparser:{{ .Version }}-amd64"
      - "ghcr.io/orangekame3/qasmparser:{{ .Version }}-arm64v8"
  - name_template: "ghcr.io/orangekame3/qasmparser:latest"
    image_templates:
      - "ghcr.io/orangekame3/qasmparser:latest-amd64"
      - "ghcr.io/orangekame3/qasmparser:latest-arm64v8"

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Valid options are either github, gitlab or gitea
  github:
    owner: orangekame3
    name: qasmparser
  
  # IDs of the archives to use for the source archive.
  # Default is empty, which means all archives will be used.
  # ids:
  #   - foo
  #   - bar
  
  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false
  
  # Whether to remove existing draft releases with the same name before creating
  # a new one.
  # Only effective if `draft` is set to true.
  # Default is false.
  replace_existing_draft: true
  
  # Useful if you want to delay the creation of the tag in the remote.
  # You can create the tag locally, but not push it, and run GoReleaser.
  # It'll then set the `target_commitish` portion of the GitHub release to the
  # value of this field.
  # Only works on GitHub.
  # Default is empty.
  # target_commitish: "{{ .Commit }}"
  
  # If set, will create a release discussion in the category specified.
  #
  # Warning: do not use categories in the 'Announcement' format.
  #  Check https://github.com/goreleaser/goreleaser/issues/2304 for more info.
  #
  # Default is empty.
  discussion_category_name: General
  
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto
  
  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default is `keep-existing`.
  mode: append
  
  # Header for the release body.
  # Default is empty.
  header: |
    ## OpenQASM 3.0 Parser Release {{ .Tag }}
    
    Welcome to this new release of qasmparser! ðŸŽ‰
  
  # Footer for the release body.
  # Default is empty.
  footer: |
    ## Installation
    
    ### Homebrew
    ```bash
    brew install orangekame3/tap/qasmparser
    ```
    
    ### Binary Download
    Download the appropriate binary for your platform from the assets below.
    
    ### Docker
    ```bash
    docker run --rm ghcr.io/orangekame3/qasmparser:{{ .Tag }} --version
    ```
    
    ---
    
    **Full Changelog**: https://github.com/orangekame3/qasmparser/compare/{{ .PreviousTag }}...{{ .Tag }}

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj